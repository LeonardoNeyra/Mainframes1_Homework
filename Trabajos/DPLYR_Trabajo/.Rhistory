#Install packages
install.packages("tidyverse")
#Add libraries
library("dplyr")
library("stringr")
library("tidyr")
getwd()
#Fuente: https://catalog.data.gov/dataset/fdic-failed-bank-list
#Lista de bancos que han quebrado de la FDIC
dataset<-read.csv("dataset/banklist.csv")
View(dataset)
dataset1<-read.csv("dataset/USDA_RD_July_2016.CSV")
View(dataset1)
rm(list = ls())
#Fuente: https://catalog.data.gov/dataset/usda-rd-section-538-multifamily-guaranteed-loans-as-of-7-13-2016
#Lista de bancos que han quebrado de la FDIC
dataset<-read.csv("dataset/USDA_RD_July_2016.CSV")
View(dataset)
NROW(dataset)
#Lista de todos los prestamistas
Ejem1<-unique(dataset %>% select(Lender_Name))
View(Ejem1)
#Cantidad de empresas prestatarias
Ejem2<-unique(dataset %>% select(Borrower_Name) %>% summarise(n()))
View(Ejem2)
Ejem2<-unique(dataset %>% select(Borrower_Name))
View(Ejem2)
#Cantidad de prestamos realizados en el año 2010
Ejem2<-unique(dataset %>% select(FY.Obligation.Year=="2010") %>% summarise(n()))
#Cantidad de prestamos realizados en el año 2010
Ejem2<-unique(dataset %>% select(FY.Obligation.Year) %>% summarise(n()))
View(Ejem2)
#Cantidad de prestamos realizados en el año 2010
Ejem2<-unique(dataset %>% select(FY.Obligation.Year=='2010') %>% summarise(n()))
View(Ejem2)
#Cantidad de prestamos realizados en el año 2010
Ejem2<-unique(dataset %>% select(FY.Obligation.Year==2010) %>% summarise(n()))
#Cantidad de prestamos realizados en el año 2010
Ejem2<-unique(dataset %>% select(FY.Obligation.Year>2010) %>% summarise(n()))
#Cantidad de prestamos realizados en el año 2010
Ejem2<-unique(dataset %>% filter(FY.Obligation.Year==2010) %>% summarise(n()))
View(Ejem2)
#Cantidad de prestamos realizados en el año 2010
Ejem2<-dataset %>% filter(FY.Obligation.Year==2010) %>% summarise(n())
#Ordenar por año de menor a mayor
Ejem3<-dataset %>% arrange(FY.Obligation.Year)
View(Ejem3)
#Promedio de dinero prestado en la ciudad de KNOXVILLE
Ejem4<-dataset %>% filter(City=="KNOXVILLE") %>% select(City,Loan_Amount) %>% summarise(mean(Loan_Amount))
View(Ejem4)
?gsub
dataset$Loan_Amount<-gsub(",","$",dataset$Loan_Amount)
dataset$Loan_Amount<-as.numeric(dataset$Loan_Amount)
View(dataset)
dataset$Loan_Amount<-gsub(",","",dataset$Loan_Amount)
dataset$Loan_Amount<-as.numeric(dataset$Loan_Amount)
View(dataset)
#Fuente: https://catalog.data.gov/dataset/usda-rd-section-538-multifamily-guaranteed-loans-as-of-7-13-2016
#Préstamos activos en el programa de préstamos multifamiliares garantizados de la Sección 538 del USDA RD
dataset<-read.csv("dataset/USDA_RD_July_2016.CSV")
dataset$Loan_Amount<-gsub(",","",dataset$Loan_Amount)
dataset$Loan_Amount<-as.numeric(dataset$Loan_Amount)
#Fuente: https://catalog.data.gov/dataset/usda-rd-section-538-multifamily-guaranteed-loans-as-of-7-13-2016
#Préstamos activos en el programa de préstamos multifamiliares garantizados de la Sección 538 del USDA RD
dataset<-read.csv("dataset/USDA_RD_July_2016.CSV")
dataset$Loan_Amount<-gsub("$","",dataset$Loan_Amount)
View(dataset)
dataset$Loan_Amount<-gsub(",","",dataset$Loan_Amount)
View(dataset)
dataset$Loan_Amount<-gsub("$","",dataset$Loan_Amount)
View(dataset)
View(dataset)
dataset$Loan_Amount<-gsub("$","0",dataset$Loan_Amount)
View(dataset)
dataset$Loan_Amount<-gsub("[$]","0",dataset$Loan_Amount)
View(dataset)
#Fuente: https://catalog.data.gov/dataset/usda-rd-section-538-multifamily-guaranteed-loans-as-of-7-13-2016
#Préstamos activos en el programa de préstamos multifamiliares garantizados de la Sección 538 del USDA RD
dataset<-read.csv("dataset/USDA_RD_July_2016.CSV")
dataset$Loan_Amount<-gsub(",","",dataset$Loan_Amount)
dataset$Loan_Amount<-gsub("[$]","0",dataset$Loan_Amount)
View(dataset)
#Fuente: https://catalog.data.gov/dataset/usda-rd-section-538-multifamily-guaranteed-loans-as-of-7-13-2016
#Préstamos activos en el programa de préstamos multifamiliares garantizados de la Sección 538 del USDA RD
dataset<-read.csv("dataset/USDA_RD_July_2016.CSV")
dataset$Loan_Amount<-gsub(",","",dataset$Loan_Amount)
dataset$Loan_Amount<-gsub("[$]","",dataset$Loan_Amount)
View(dataset)
dataset$Loan_Amount<-as.numeric(dataset$Loan_Amount)
View(dataset)
#Promedio de dinero prestado en la ciudad de KNOXVILLE
Ejem4<-dataset %>% filter(City=="KNOXVILLE") %>% select(City,Loan_Amount) %>% summarise(mean(Loan_Amount))
View(Ejem4)
#Promedio de dinero prestado en todas las ciudades
Ejem5<-dataset %>% filter(City) %>% select(City,Loan_Amount) %>% group_by(City) %>% summarise(mean(Loan_Amount))
#Promedio de dinero prestado en todas las ciudades
Ejem5<-dataset %>% select(City,Loan_Amount) %>% group_by(City) %>% summarise(mean(Loan_Amount))
View(Ejem5)
View(Ejem4)
#Lista de ciudades en las que BONNEVILLE MORTGAGE COMPANY hizo préstamos
Ejem6<-dataset %>% filter(Lender_Name=="BONNEVILLE MORTGAGE COMPANY") %>% select(Lender_Name,City)
View(Ejem6)
#Lista de ciudades en las que BONNEVILLE MORTGAGE COMPANY hizo préstamos
Ejem6<-distinct(dataset %>% filter(Lender_Name=="BONNEVILLE MORTGAGE COMPANY") %>% select(Lender_Name,City))
View(Ejem6)
#Lista de ciudades en las que BONNEVILLE MORTGAGE COMPANY hizo préstamos
Ejem6<-distinct(dataset %>% filter(Lender_Name=="BONNEVILLE MORTGAGE COMPANY") %>% select(City))
View(Ejem6)
#Determinar la varianza del costo total de desarrollo de los préstamos mayores a un millón
Ejem7<-dataset %>% filter(Loan_Amount>1000000) %>% select(Total_Development_Cost) %>% summarise(var(Total_Development_Cost))
View(Ejem7)
dataset %>% filter(Loan_Amount>1000000)
#Determinar la varianza del costo total de desarrollo de los préstamos mayores a dos millón
Ejem7<-dataset %>% filter(Loan_Amount>2000000) %>% select(Total_Development_Cost) %>% summarise(var(Total_Development_Cost))
#Determinar la desviación estándar de los ingresos en los hogares
Ejem8<-dataset %>% select(Median_Household_Income_Obligation) %>% summarise(sd(Median_Household_Income_Obligation))
View(Ejem8)
#Número de proyecto de tipo familiar que fueron nuevas construcciones
Ejem9<-dataset %>% filter(Project_Type=="FAMILY",Construction_Type=="NEW CONSTRUCTION") %>% summarise(n())
View(Ejem9)
?min_rank
#Préstamos con indicador de crédito fiscal que cubrieron mas del 50% del costo
Ejem10<-dataset %>% filter(Loan_to_Cost>0.50) %>% select(Loan_Amount,Loan_to_Cost) %>% min_rank(Loan_to_Cost)
#Préstamos con indicador de crédito fiscal que cubrieron mas del 50% del costo
Ejem10<-dataset %>% filter(Loan_to_Cost>0.50) %>% select(Loan_Amount,Loan_to_Cost) %>% min_rank(dataset)
min_rank(dataset)
View(min_rank(dataset))
#Préstamos con indicador de crédito fiscal que cubrieron mas del 50% del costo
Ejem10<-dataset %>% filter(Loan_to_Cost>0.50) %>% select(Loan_Amount,Loan_to_Cost)
View(Ejem10)
#Cantidad de proyectos senior de tamañan mayor a 60 desarrollados en SALEM que tengan menos de 45 unidades de dormitorio N2
Ejem11<-dataset %>% filter(Project_Type=="SENIOR",Project_Size>60,City=="SALEM",Total_2_Bedroom_Units<45) %>% summarise(n())
View(Ejem11)
#Cantidad de proyectos senior de tamañan mayor a 60 desarrollados en SALEM que tengan menos de 45 unidades de dormitorio N2
Ejem11<-dataset %>% filter(Project_Type=="SENIOR",Project_Size>60,City=="SALEM") %>% summarise(n())
View(Ejem11)
#
Ejem12<-dataset %>% select(Lender_Name)
#Cantidad de proyectos senior de tamañan mayor a 60 desarrollados en SALEM que tengan menos de 45 unidades de dormitorio N2
Ejem11<-dataset %>% filter(Project_Type=="SENIOR",Project_Size>60,City=="UPPER SANDUSKY") %>% summarise(n())
View(Ejem11)
#Cantidad de proyectos senior de tamañan mayor a 60 desarrollados en SALEM que tengan menos de 45 unidades de dormitorio N2
Ejem11<-dataset %>% filter(Project_Type=="SENIOR",Project_Size>60,Total_2_Bedroom_Units<45) %>% summarise(n())
View(Ejem11)
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(min(Loan_Amount))
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(Loan_Amount) %>% summarise(min(Loan_Amount))
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(Loan_Amount) %>% min(Loan_Amount)
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(Loan_Amount) %>% min_rank(Loan_Amount)
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(FY.Obligation.Year==2009) %>% summarise(max(Loan_Amount))
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(FY.Obligation.Year==2009) %>% summarise(min(Loan_Amount))
View(Ejem12)
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(FY.Obligation.Year==2009) %>% select(Lender_Name) %>% summarise(min(Loan_Amount))
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(FY.Obligation.Year==2009) %>% select(Lender_Name,Loan_Amount) %>% summarise(min(Loan_Amount))
View(Ejem12)
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(FY.Obligation.Year==2009) %>% summarise(min(Loan_Amount)) %>% select(Lender_Name,Loan_Amount)
#Empresa que hizo el mínimo financiamiento en el 2009
Ejem12<-dataset %>% filter(FY.Obligation.Year==2009) %>% summarise(min(Loan_Amount))
#Media de préstamos que no se han hecho en zonas de empoderamiento y comunidades empresariales (EZ.EC) por tipo de construcción
Ejem13<-dataset %>% select(EZ.EC_Indicator=='N') %>% group_by(Construction_Type) %>% summarise(median(Loan_Amount))
#Media de préstamos que no se han hecho en zonas de empoderamiento y comunidades empresariales (EZ.EC) por tipo de construcción
Ejem13<-dataset %>% select(EZ.EC_Indicator=="N") %>% group_by(Construction_Type) %>% summarise(median(Loan_Amount))
#Media de préstamos que no se han hecho en zonas de empoderamiento y comunidades empresariales (EZ.EC) por tipo de construcción
Ejem13<-dataset %>% filter(EZ.EC_Indicator=="N") %>% group_by(Construction_Type) %>% summarise(median(Loan_Amount))
View(Ejem13)
#Mínimo y máximo de precio medio de la unidad de alquier N1 y N2 respectivamente, para préstamos con indicador de crédito fiscal
Ejem14<-dataset %>% filter(Tax_Credit_Indicator=='Y') %>% summarise(min(Br1.Unit.Average.Contract.Rent),max(Br2.Unit.Average.Contract.Rent))
View(Ejem14)
#Mínimo (diferente de cero) y máximo de precio medio de la unidad de alquier N1 y N2 respectivamente, para préstamos con indicador de crédito fiscal
Ejem14<-dataset %>% filter(Tax_Credit_Indicator=='Y', Br1.Unit.Average.Contract.Rent!=0) %>% summarise(min(Br1.Unit.Average.Contract.Rent),max(Br2.Unit.Average.Contract.Rent))
View(Ejem14)
#Mínimo (diferente de cero) y máximo de precio medio de la unidad de alquier N1 y N2 respectivamente
#para préstamos con indicador de crédito fiscal
Ejem14<-dataset %>% filter(Tax_Credit_Indicator=='Y', Br1.Unit.Average.Contract.Rent!=0) %>%
summarise(min(Br1.Unit.Average.Contract.Rent),max(Br2.Unit.Average.Contract.Rent))
#Préstamo más reciente realizado
Ejem15<-dataset %>% select(FY.Obligation.Year,Lender_Name,Borrower_Name) %>% arrange(FY.Obligation.Year) %>% last(FY.Obligation.Year)
#Préstamo más reciente realizado
Ejem15<-dataset %>% select(FY.Obligation.Year,Lender_Name,Borrower_Name) %>% arrange(FY.Obligation.Year) %>% summarise(last(FY.Obligation.Year))
View(Ejem15)
#Préstamo más reciente realizado
Ejem15<-dataset %>% select(FY.Obligation.Year) %>% arrange(FY.Obligation.Year) %>% summarise(last(FY.Obligation.Year))
View(Ejem15)
#Préstamo más reciente realizado
Ejem15<-dataset %>% select(FY.Obligation.Year,Lender_Name) %>% arrange(FY.Obligation.Year) %>% group_by(Lender_Name) %>% summarise(last(FY.Obligation.Year))
View(Ejem15)
#Préstamo más reciente realizado
Ejem15<-dataset %>% select(FY.Obligation.Year) %>% arrange(FY.Obligation.Year) %>% summarise(last(FY.Obligation.Year))
#Año del préstamo más antiguo realizado
Ejem15<-dataset %>% select(FY.Obligation.Year) %>% arrange(FY.Obligation.Year) %>% summarise(first(FY.Obligation.Year))
View(Ejem15)
#Media del tamaño del proyecto por tipo de proyecto
Ejem16<-dataset %>% select(Project_Type,Project_Size) %>% group_by(Project_Type) %>% summarise(median(Project_Size))
Ejem16<-dataset %>% select(Project_Type,Project_Size) %>% group_by(Project_Type)
#Media del tamaño del proyecto por tipo de proyecto
Ejem16<-dataset %>% filter(Project_Type,Project_Size) %>% group_by(Project_Type) %>% summarise(median(Project_Size))
#Add libraries
library("dplyr")
library("stringr")
library("tidyr")
#Media del tamaño del proyecto por tipo de proyecto
Ejem16<-dataset %>% filter(Project_Type,Project_Size) %>% group_by(Project_Type) %>% summarise(median(Project_Size))
Ejem16<-dataset %>% filter(Project_Type,Project_Size) %>% group_by(Project_Type)
#Media del tamaño del proyecto por tipo de proyecto
Ejem16<-dataset %>% select(Project_Type,Project_Size) %>% group_by(Project_Type) %>% summarise(median(Project_Size))
View(Ejem16)
#Préstamos realizados antes del año 2000 en prestatarios con proyecto de tamaño entre 40 y 50
Ejem17<-dataset %>% filter(FY.Obligation.Year<2000, Project_Size>40 & Project_Size<50)
View(Ejem17)
#Creamos otro dataset
dataset$id=1:NROW(dataset)
View(dataset)
install.packages("wakefield")
library("wakefield")
#Cantidad de préstamos en LONDON con indicador tribal
Ejem18<-dataset %>% filter(City=="LONDON",Colonias_Tribal_Indicator=='Y')
View(Ejem18)
#Cantidad de préstamos en LONDON sin indicador tribal
Ejem18<-dataset %>% filter(City=="LONDON",Colonias_Tribal_Indicator=='N')
View(Ejem18)
#
Ejem19<-dataset %>% select(Loan_Amount,Total_Development_Cost) %>% summarise(Loan_Amount/Total_Development_Cost)
#
Ejem19<-dataset %>% select(Loan_Amount,Total_Development_Cost) %>% filter(Loan_Amount/Total_Development_Cost<0.5)
#
Ejem19<-dataset %>% select(Loan_Amount,Total_Development_Cost,Loan_to_Cost) %>% filter(Loan_Amount/Total_Development_Cost=Loan_to_Cost)
#
Ejem19<-dataset %>% select(Loan_Amount,Total_Development_Cost,Loan_to_Cost) %>% filter(Loan_Amount/Total_Development_Cost==Loan_to_Cost)
View(Ejem19)
NROW(dataset)
?wakefield
?sample
datos<-function(n) {
id=sample(1:789,n,replace = FALSE)
quebro=sample(c('Y','N'),n,replace = TRUE)
nombre=wakefield::name(n)
dt<-data.frame(id,quebro,nombre)
return(dt)
}
datitos<-datos(428)
View(datitos)
#Generar un left join
Ejem23<-left_join(dataset,datitos,by=c("id"="id")) %>% select(Lender_Name)
View(Ejem23)
#Proyectos que no tienen dormitorios N5
Ejem20<-dataset %>% filter(Total_5_Bedroom_Units==0)
View(Ejem20)
#Número de proyectos que solo tienen dormitorios N1 y N2
Ejem21<-dataset %>% filter(Total_3_Bedroom_Units==0,Total_4_Bedroom_Units==0,Total_5_Bedroom_Units==0) %>% summarise(n())
View(Ejem21)
#Número de proyectos que solo tienen dormitorios N1 y N2
Ejem21<-dataset %>% filter(Total_1_Bedroom_Units!=0, Total_2_Bedroom_Units!=0, Total_3_Bedroom_Units==0,Total_4_Bedroom_Units==0,Total_5_Bedroom_Units==0) %>%
summarise(n())
View(Ejem21)
#Comprobar que si existe un dormitorio N3 debe existir un precio medio de la unidad de alquier N3
Ejem22<-dataset %>% filter(Total_3_Bedroom_Units!=0,Br3.Unit.Average.Contract.Rent!=0) %>% select(Total_3_Bedroom_Units,Br3.Unit.Average.Contract.Rent)
View(Ejem22)
View(Ejem23)
#Generar un inner join y aquellos proyectos que fracasaron
Ejem25<-inner_join(dataset,datitos,by=c("id"="id")) %>% filter(quebro=='Y')
View(Ejem25)
View(dataset)
#Generar un inner join y aquellos proyectos que fracasaron
Ejem25<-inner_join(dataset,datitos,by=c("id"="id")) %>% filter(quebro=='Y') %>% select(Lender_Name,quebro)
View(Ejem25)
Ejem24<-right_join(dataset,datitos,by=c("id"="id"))
View(Ejem24)
#Generar un right join y mostrar la cantida de proyectos REHAB/REPAIR que fueron exitosos
Ejem24<-right_join(dataset,datitos,by=c("id"="id")) %>% filter(Construction_Type=="REHAB/REPAIR",quebro='N')
View(Ejem24)
#Generar un right join y mostrar la cantida de proyectos REHAB/REPAIR que fueron exitosos
Ejem24<-right_join(dataset,datitos,by=c("id"="id")) %>% filter(Construction_Type=="REHAB/REPAIR",quebro=='N')
View(dataset)
