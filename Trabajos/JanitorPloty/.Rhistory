colnames(dat)<-c("Name","Unit","Department","JobTitle","Annual_RT","HourlyRate","Full_Part","Reg_Temp","FID")
View(dat)
dat<-dat %>% filter(Name!="")
View(dat)
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
plot_ly(data = dat, x = dat$Department, y = dat$Annual_RT,
color = dat$Department, type = "bar")
View(dat)
plot_ly(data = dat, x = dat$Department, y = dat$Full_Part,
color = dat$Department, type = "bar")
#Consultas
#Query1
query1<-dat %>% group_by(Unit) %>% summarise(n())
#Consultas
#Query1
query01<-dat %>% group_by(Unit) %>% summarise(n())
rm(query1)
View(query01)
#Consultas
#Query1
query01<-dat %>% group_by(Unit) %>% summarise(total=n())
plot_ly(data = query01, x = query01$Unit, y = query01$total,
color = query01$Unit, type = "bar")
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('H:/9 CICLO/Mainframes/Sem14/Demo')
runApp('H:/9 CICLO/Mainframes/Sem14/Demo')
View(mtcars)
plot_ly(mtcars, x = ~mpg, y = ~wt)
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
plot_ly(query01,x=query01$Unit,y=query01$total)
plot_ly(query01,x=query01$Unit,y=query01$total,type="bar")
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
View(dat)
#Add libraries
library("janitor")
#Install Packages
install.packages("janitor")
#Add libraries
library("janitor")
library("tidyverse")
#Leer dataset
#Obtenido de: https://catalog.data.gov/dataset/average-daily-traffic-counts-3968f
dat2<-read.csv("Dataset/Average_Daily_Traffic_Counts.csv")
View(dat2)
#Query01: Agrega total en columna
Q01<-add_totals_col(dat2,na.rm = TRUE)
View(Q01)
#Query05: Agrega un total en la columna o fila
Q05<-adorn_totals(dat = dat2, where = "row", fill = "--", na.rm = TRUE)
View(Q05)
#Query07: Da un buen formato a los col_names
Q07<-clean_names(dat = dat2)
#Query8: Convierte fechas codificadas como numeros
Q08<-as_data_frame(excel_numeric_to_date(date_num = 40000,date_system = "modern"))
View(Q08)
#Query8: Convierte fechas codificadas como numeros
Q08<-as_data_frame(excel_numeric_to_date(date_num = 40,date_system = "modern"))
View(Q08)
View(Q08)
#Query13
Q13<-top_levels(input_vec = dat2$Traffic.Volume.Count.Location..Address,n = 2,show_na = FALSE)
View(Q13)
#Query17: Usando tabyl
Q17<-dat2 %>% tabyl(Total.Passing.Vehicle.Volume) %>% adorn_percentages("all") %>% adorn_rounding(digits = 6)
View(Q17)
library(shiny); runApp('ScriptPloty_Neyra.R')
#Install packages
install.packages("shiny")
install.packages("shiny")
install.packages("plotly")
runApp('ScriptPloty_Neyra.R')
plot_ly(query01,x=query01$Unit,y=query01$total,type="bar")
library(shiny); runApp('ScriptPloty_Neyra.R')
packageVersion("plotly")
runApp('ScriptPloty_Neyra.R')
remove.packages("plotly", lib="~/R/win-library/3.4")
install.packages("plotly")
library(shiny); runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
#Install packages
#install.packages("shiny")
#install.packages("plotly")
devtools::install_github('ropensci/plotly')
#Install packages
#install.packages("shiny")
#install.packages("plotly")
install.packages("devtools")
devtools::install_github('ropensci/plotly')
runApp('ScriptPloty_Neyra.R')
library(shiny); runApp('ScriptPloty_Neyra.R')
plot_ly(query01,x=query01$Unit,y=query01$total,type="bar")
runApp('ScriptPloty_Neyra.R')
runApp('prueba.R')
runApp('prueba.R')
version(R)
version
runApp('prueba.R')
runApp('prueba.R')
runApp('prueba.R')
runApp('prueba.R')
runApp('prueba.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
input$entrada
runApp('ScriptPloty_Neyra.R')
View(Q01)
rm(Q01,Q05,Q07,Q08,Q13,Q17)
#datos
consulta1<-~get(input$entrada)
consulta1
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
plot_ly(query01,x=~Unit,y=~total,color=~Unit,type="bar")
runApp('ScriptPloty_Neyra.R')
query02<-dat %>% group_by(Full_Part) %>% summarise(total=n())
plot_ly(query02,x=~Full_Part,y=~total,color=~Full_Part,type="bar")
plot_ly(query02,x=~Full_Part,y=~total,color=~Full_Part,type="area")
plot_ly(query02,x=~Full_Part,y=~total,color=~Full_Part,type="area")
plot_ly(query02,x=~Full_Part,y=~total,color=~Full_Part,type="pie")
plot_ly(query02,x=~Full_Part,y=~total,type="pie")
plot_ly(query02,x=~Full_Part,y=~total,type='scatter', mode = 'lines')
plot_ly(query02,labels=~Full_Part,values=~total,type="pie")
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
plot_ly(query01,x=~Unit,y=~total,color=~Unit,type="bar")
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
query03<-dat %>% group_by(Department) %>% summarise(total=n())
View(query03)
View(query03)
query03<-dat %>% group_by(Department) %>% summarise(total=n()) %>% arrange(desc(cantidad)) %>% slice(1:5)
query03<-dat %>% group_by(Department) %>% summarise(total=n()) %>% arrange(desc(total)) %>% slice(1:5)
View(query03)
View(query01)
query04<-dat %>% filter(Unit="H&NS") %>% group_by(Department)
query04<-dat %>% filter(Unit=="H&NS") %>% group_by(Department)
View(query04)
query04<-dat %>% filter(Unit=="H&NS") %>% select(Unit,Department,Annual_RT) %>% group_by(Department)
View(query04)
query04<-dat %>% filter(Unit=="H&NS") %>% select(Unit,Department,Annual_RT) %>% group_by(Department) %>% summarise(total=n())
View(query04)
query04<-dat %>% filter(Unit=="H&NS") %>% select(Unit,Department) %>% group_by(Department) %>% summarise(total=n())
View(query04)
View(query04)
View(query04)
View(query03)
View(query04)
plot_ly(query03,x=~Department,y=~total,
type = 'scatter', mode = 'lines')
plot_ly(query03,x=~Total,y=~Department,
type = 'scatter', mode = 'lines')
plot_ly(query03,x=~total,y=~Department,
type = 'scatter', mode = 'lines')
query03<-dat %>% group_by(Department) %>% summarise(total=n()) %>% arrange(desc(total)) %>% slice(1:5)
plot_ly(query03,labels=~Department,values=~total,type="pie")
runApp('ScriptPloty_Neyra.R')
runApp('ScriptPloty_Neyra.R')
plot_ly(query04,x=~Department,y=~total,type="bar")
View(query04)
plot_ly(query04,x=query04$Department,y=query04$total,type="bar")
rm(consulta1)
query04<-dat %>% filter(Unit=="H&NS") %>% select(Unit,Department) %>% group_by(Department) %>% summarise(total=n())
View(query04)
plot_ly(query03,labels=~Department,values=~total,type="pie")
query04<-dat %>% filter(Unit=="H&NS") %>% group_by(Department) %>% summarise(total=n())
View(query04)
plot_ly(query04,x=~Department,y=~total,type="bar")
View(query04)
query04<-dat %>% filter(Unit=="H&NS") %>% group_by(Department) %>% summarise(total=n()) %>% slice(1:10)
plot_ly(query04,x=~Department,y=~total,type="bar")
query04<-dat %>% filter(Unit=="H&NS") %>% group_by(Department) %>% summarise(total=n()) %>% slice(1:9)
plot_ly(query04,x=~Department,y=~total,type="bar")
plot_ly(query04,labels=~Department,values=~total,type="pie")
query04<-dat %>% filter(Unit=="H&NS") %>% group_by(Department) %>% summarise(total=n())
plot_ly(query04,labels=~Department,values=~total,type="pie")
query05<-dat %>% group_by(JobTitle)
query05<-dat %>% group_by(JobTitle)%>% summarise(total=n())
View(query05)
query05<-dat %>% group_by(JobTitle)%>% summarise(total=n())%>% arrange(desc(total))
View(query05)
query05<-dat %>% group_by(JobTitle)%>% summarise(total=n(),todo=mean(Annual_RT)) %>% arrange(desc(total))
View(query05)
query05<-dat %>% group_by(JobTitle)%>% summarise(total=n(),todo=mean(HourlyRate)) %>% arrange(desc(total))
View(query05)
query05<-dat %>% group_by(JobTitle)%>% summarise(total=n(),mediaDeHora=mean(HourlyRate)) %>%
arrange(desc(total)) %>% slice(1:8)
View(query05)
query07<-dat %>% group_by(Reg_Temp) %>% summarise(total=n())
View(query07)
query06<-dat %>% group_by(JobTitle)%>% summarise(total=n(),mediaIngreso=mean(Annual_RT)) %>%
arrange(desc(total)) %>% slice(1:8)
View(query06)
query08<-dat %>% filter(Reg_Temp) %>% group_by(Full_Part) %>% summarise(total=n())
View(query07)
query08<-dat %>% filter(Reg_Temp=="R") %>% group_by(Full_Part) %>% summarise(total=n())
View(query08)
View(query02)
View(query02)
query09<-dat %>% filter(Full_Part=="F") %>% group_by(Reg_Temp) %>% summarise(total=n())
View(query03)
View(query01)
query10<-dat %>% filter(Unit=="FIRE" | "POL")
query10<-dat %>% filter(Unit=="FIRE" && "POL")
View(query10)
query10<-dat %>% filter(Unit=="FIRE" || "POL")
query10<-dat %>% filter(Unit=="FIRE" ^ "POL")
query10<-dat %>% filter(Unit=="FIRE" OR "POL")
query10<-dat %>% filter(Unit=="FIRE",Unit=="POL")
View(query05)
plot_ly(query05,x=~JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora)
#Consultas
query01<-dat %>% group_by(Unit) %>% summarise(total=n()) %>% slice(1:5)
View(query01)
plot_ly(query01,x=~Unit,y=~total,color=~Unit,type="bar")
#Consultas
query01<-dat %>% group_by(Unit) %>% summarise(total=n())
plot_ly(query01,x=~Unit,y=~total,color=~Unit,type="bar")
query05<-dat %>% group_by(JobTitle)%>% summarise(total=n(),mediaDeHora=mean(HourlyRate)) %>%
arrange(desc(total)) %>% slice(1:8)
plot_ly(query05,x=~JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora)
View(query05)
plot_ly(query05,x=query05$JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora)
query05$JobTitle
View(query05$JobTitle)
View(query05$total)
plot_ly(query05,x=query05$JobTitle,y=query05$total,type="bar") %>%
add_trace(y=~mediaDeHora)
a<-query05$JobTitle
b<-query05$total
c<-query05$mediaDeHora
plot_ly(query05,x=a,y=b,type="bar") %>%
add_trace(y=c)
View(a)
plot_ly(query05,x=~JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora)
rm(a,b,c)
plot_ly(query05,x=~JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora) %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
View(query05$total)
plot_ly(query05,x=~JobTitle,y=~total,type="histogram")
plot_ly(query05,x=~JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora) %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
View(dat)
View(dat2)
rm(dat2)
rm(dat)
plot_ly(query05,x=~JobTitle,y=~total,type="bar") %>%
add_trace(y=~mediaDeHora) %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
#Leer dataset
#Obtenido de:https://catalog.data.gov/dataset/city-employee-salaries-november-2017
dat<-read.csv("Dataset/City_Employee_Salaries_November_2017.csv")
#Limpieza
colnames(dat)<-c("Name","Unit","Department","JobTitle","Annual_RT","HourlyRate","Full_Part","Reg_Temp","FID")
dat<-dat %>% filter(Name!="")
opc<-c("query01","query02","query03","query04","query05","query06","query07","query08","query09","query10",
"query11","query12","query13","query14","query15","query16","query17","query18","query19","query20")
runApp('ScriptPloty_Neyra.R')
plot_ly(query05,x=~JobTitle,y=~total,type="scatter",name="Cantidad") %>%
add_trace(y=~mediaDeHora,name="Horas")
plot_ly(query05,x=~JobTitle,y=~total,type="scatter",name="Cantidad",mode="lines") %>%
add_trace(y=~mediaDeHora,name="Horas")
plot_ly(query05,x=~JobTitle,y=~total,type="scatter",name="bar") %>%
add_trace(y=~mediaDeHora,name="Horas")
plot_ly(query05,x=~JobTitle,y=~total,type="bar",name="Cantidad") %>%
add_trace(y=~mediaDeHora,name="Horas")
View(query06)
View(query05)
plot_ly(query05,labels=~JobTitle,values=~mediaDeHora,type="pie",name="Cantidad")
plot_ly(query06,labels=~JobTitle,values=~mediaIngreso,type="pie",name="Cantidad")
View(query07)
View(query09)
View(query07)
View(query08)
View(query09)
plot_ly(query07,labels=~Reg_Temp,values=~total,type="pie")
plot_ly(query08,labels=~Full_Part,values=~total,type="pie")
plot_ly(query09,labels=~Reg_Temp,values=~total,type="pie")
View(query04)
plot_ly(query04,x=~Department,y=~total,type="scatter",mode="lines")
View(query04)
View(query04)
query04<-dat %>% filter(Unit=="H&NS") %>% select(Department) %>% group_by(Department) %>% summarise(total=n())
View(query04)
plot_ly(query04,x=~Department,y=~total,type="scatter",mode="lines")
View(query05)
View(query05)
query10<-dat %>% select(Annual_RT,HourlyRate)
View(query10)
query10<-dat %>% select(HourlyRate)
View(query10)
plot_ly(query10,x=~x,y=~HourlyRate,type="scatter")
x<-c(0:150)
plot_ly(query10,x=~x,y=~HourlyRate,type="scatter")
x<-c(1:150)
plot_ly(query10,x=~x,y=~HourlyRate,type="scatter")
x<-c(1:7327)
plot_ly(query10,x=~x,y=~HourlyRate,type="scatter")
query11<-dat %>% select(Annual_RT)
runApp('ScriptPloty_Neyra.R')
plot_ly(query08,labels=~Full_Part,values=~total,type="pie") %>%
add_pie(hole = 0.6) %>%
layout(title = "Donut chart",  showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(query08,labels=~Full_Part,values=~total) %>%
add_pie(hole = 0.6) %>%
layout(title = "Donut chart",  showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(x=plotly12$Anio, y=plotly12$minVic,
type = "bar", name="Minimo") %>%
add_trace(y=plotly12$maxVic, name="Maximo")
query11<-dat %>% filter(HourlyRate>=10) %>% group_by(Unit) %>% summarise(total=n())
View(query11)
plot_ly(query11,x=~Unit,y=~total,type="histogram")
plot_ly(query11,x=~total,y=~Unit,type="histogram")
plot_ly(query11,x=~total,y=~Unit,type="bar")
query11<-dat %>% filter(HourlyRate>=10) %>% group_by(Unit) %>% summarise(total=n(),Horas=mean(HourlyRate))
View(query11)
plot_ly(query11,x=~total,y=~Unit,type="bar") %>%
add_trace(y=~Horas)
plot_ly(query11,x=~total,y=~Unit,type="bar") %>%
add_trace(y=~Horas,type="scatter")
plot_ly(query11,x=~total,y=~Unit,type="bar") %>%
add_trace(x=~Horas,type="scatter")
query11<-dat %>% filter(HourlyRate>=10) %>% group_by(Unit) %>% summarise(total=n(),Horas=max(HourlyRate))
View(query11)
plot_ly(query11,x=~total,y=~Unit,type="bar") %>%
add_trace(x=~Horas,type="scatter",mode="lines")
query12<-dat %>% filter(HourlyRate>=20) %>% group_by(Unit) %>% summarise(total=n(),Horas=min(HourlyRate))
View(query12)
plot_ly(query12,x=~total,y=~Unit,type="bar") %>%
add_trace(x=~Horas,type="scatter",mode="lines")
View(query12)
plot_ly(query12,x=~total,y=~Unit,type="bar",name="cantidad") %>%
add_trace(x=~Horas,type="scatter",mode="lines",name="minimoHoras")
query13<-dat %>% select(Annual_RT,HourlyRate)
plot_ly(query13,x=~Annual_RT,y=~HourlyRate,type="scatter",mode="markers")
plot_ly(query13,x=~Annual_RT,y=~HourlyRate,type="scatter",mode="markers",
marker = list(size = ~gap, opacity = 0.5))
View(query13)
library("dplyr")
query13<-dat %>% select(Annual_RT,HourlyRate) %>% mutate(desviacion=summarise(median(Annual_RT)))
query13<-dat %>% select(Annual_RT,HourlyRate) %>% mutate(desviacion=rnorm(7327, mean = 5))
View(query13)
plot_ly(query13,x=~Annual_RT,y=~HourlyRate,type="scatter",mode="markers",
marker = list(size = ~desviacion, opacity = 0.5))
plot_ly(query13,x=~Annual_RT,y=~HourlyRate,type="scatter")
query13<-dat %>% select(Annual_RT,HourlyRate)
query14<-dat %>% group_by(Full_Part) %>% summarise(median(HourlyRate))
View(query14)
query15<-dat %>% group_by(Reg_Temp) %>% summarise(VarIngreso=vars(Annual_RT))
View(query15)
query15<-dat %>% group_by(Reg_Temp) %>% summarise(VarIngreso=var(Annual_RT))
View(query15)
query15<-dat %>% group_by(Reg_Temp) %>% summarise(VarIngreso=dplyr::var(Annual_RT))
View(query15)
query15<-dat %>% group_by(Reg_Temp) %>% summarise(VarIngreso=var(Annual_RT))
View(query05)
query16<-dat %>% filter(JobTitle=="Police Officer") %>% summarise(ingresos=sum(Annual_RT))
View(query16)
query16<-dat %>% filter(JobTitle=="Police Officer") %>% select(JobTitle) %>% summarise(ingresos=sum(Annual_RT))
query16<-dat %>% filter(JobTitle=="Police Officer") %>% select(JobTitle,Annual_RT) %>% summarise(ingresos=sum(Annual_RT))
View(query16)
query16<-dat %>% filter(JobTitle=="Police Officer") %>% summarise(ingresos=sum(Annual_RT))
?filter
query16<-dat %>% filter(JobTitle=="Police Officer" | JobTitle=="Fire Fighter II")
View(query16)
View(query15)
plot_ly(query15,x=~Reg_Temp,y=~varIngreso,type="histogram",name="varianza")
plot_ly(query15,x=~Reg_Temp,y=~VarIngreso,type="histogram",name="varianza")
plot_ly(query15,x=~Reg_Temp,y=~VarIngreso,type="histogram",name="varianza",color=~Reg_Temp)
plot_ly(query15,x=~Reg_Temp,y=~VarIngreso,type="pie")
plot_ly(query15,labels=~Reg_Temp,values=~VarIngreso,type="pie")
query16<-dat %>% filter(JobTitle=="Police Officer") %>% select(JobTitle,HourlyRate)
View(query16)
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="scatter")
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box")
View(query05)
query17<-dat %>% filter(JobTitle=="Fire Fighter II") %>% select(JobTitle,HourlyRate)
View(query17)
plot_ly(query17,x=~JobTitle,y=~HourlyRate,type="box")
View(query05)
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",name="Policia") %>%
add_trace(y=~HourlyRate,type="box",name="Bombero")
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",name="Policia") %>%
add_trace(y=~HourlyRate,name="Bombero")
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",name="Policia") %>%
add_trace(query17,y=~HourlyRate,name="Bombero")
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",boxpoints = "all", jitter = 0.3,pointpos = -1.8)
output$plot<-renderPlotly({
#datos
#consulta1<-~get(input$entrada)
#Renderizado
if(input$entrada=="query01"){
plot_ly(query01,x=~Unit,y=~total,color=~Unit,type="bar")
}
else if(input$entrada=="query02"){
plot_ly(query02,labels=~Full_Part,values=~total,type="pie")
}
else if(input$entrada=="query03"){
plot_ly(query03,labels=~Department,values=~total,type="pie")
}
else if(input$entrada=="query04"){
plot_ly(query04,x=~Department,y=~total,type="scatter",mode="lines")
}
else if(input$entrada=="query05"){
plot_ly(query05,x=~JobTitle,y=~total,type="bar",name="cantidad") %>%
add_trace(y=~mediaDeHora,name="Horas")
}
else if(input$entrada=="query06"){
plot_ly(query06,x=~JobTitle,y=~total,type="bar",name="cantidad") %>%
add_trace(y=~mediaIngreso,name="ingresos")
}
else if(input$entrada=="query07"){
plot_ly(query07,labels=~Reg_Temp,values=~total,type="pie")
}
else if(input$entrada=="query08"){
plot_ly(query08,labels=~Full_Part,values=~total) %>%
add_pie(hole = 0.6) %>%
layout(title = "Donut chart",  showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
}
else if(input$entrada=="query09"){
plot_ly(query09,labels=~Reg_Temp,values=~total,type="pie")
}
else if(input$entrada=="query10"){
x<-c(1:7327)
plot_ly(query10,x=~x,y=~HourlyRate,type="scatter")
}
else if(input$entrada=="query11"){
plot_ly(query11,x=~total,y=~Unit,type="bar",name="cantidad") %>%
add_trace(x=~Horas,type="scatter",mode="lines",name="minimoHoras")
}
else if(input$entrada=="query12"){
plot_ly(query12,x=~total,y=~Unit,type="bar",name="cantidad") %>%
add_trace(x=~Horas,type="scatter",mode="lines",name="minimoHoras")
}
else if(input$entrada=="query13"){
plot_ly(query13,x=~Annual_RT,y=~HourlyRate,type="scatter")
}
else if(input$entrada=="query14"){
plot_ly(query14,x=~Annual_RT,y=~HourlyRate,type="scatter")
}
else if(input$entrada=="query15"){
plot_ly(query15,labels=~Reg_Temp,values=~VarIngreso,type="pie")
}
else if(input$entrada=="query16"){
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box")
}
else if(input$entrada=="query17"){
plot_ly(query17,x=~JobTitle,y=~HourlyRate,type="box")
}
else if(input$entrada=="query18"){
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",boxpoints = "all", jitter = 0.3,pointpos = -1.8)
}
})
plot_ly(query01,x=~Unit,y=~total,color=~Unit,type="bar")
query19<-dat %>% group_by(Department) %>% summarise(total=n())
View(query19)
query19<-dat %>% group_by(Department) %>% summarise(total=n()) %>% slice(1:25)
View(query19)
runApp('ScriptPloty_Neyra.R')
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",colors="green")
plot_ly(query16,x=~JobTitle,y=~HourlyRate,type="box",color = ~clarity)
plot_ly(query14,x=~Annual_RT,y=~HourlyRate,type="scatter")
plot_ly(query14,x=~Annual_RT,y=~HourlyRate,type="scatter")
query14<-dat %>% group_by(Full_Part) %>% summarise(MediaHoras=median(HourlyRate))
plot_ly(query14,x=~Annual_RT,y=~HourlyRate,type="scatter")
View(query14)
plot_ly(query15,labels=~Reg_Temp,values=~VarIngreso,type="pie")
plot_ly(query14,labels=~Full_Part,values=~MediaHoras) %>%
add_pie(hole = 0.6) %>%
layout(title = "Donut chart",  showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
View(query19)
query20<-dat %>% select(Annual_RT)
View(query20)
View(query19)
plot_ly(query19,x=~Department,y=~total,type="scatter",mode="lines")
View(query20)
plot_ly(query20,x=~x,y=~total,color=~Annual_RT,colors="Set1")
View(query20)
plot_ly(query20,x=~x,y=~Annual_RT,color=~Annual_RT,colors="Set1")
View(query01)
View(query03)
View(query02)
query20<-dat %>% select(Annual_RT,Full_Part)
plot_ly(query20,x=~x,y=~Annual_RT,color=~Full_Part,colors="Set1")
runApp('ScriptPloty_Neyra.R')
plot_ly(query19,x=~total,y=~Department,type="scatter",mode="lines")
